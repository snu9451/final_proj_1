<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.mapper.ItemMapper">
 <resultMap type="map" id="itemVO">
  <!-- 1 , 2, 3, 7 에서 사용 -->
    <result column="BM_NO" property="BM_NO"/> 
    <result column="BI_FILE" property="BI_FILE"/> 
    <result column="BM_TITLE" property="BM_TITLE"/> 
    <result column="BM_DATE" property="BM_DATE"/> 
    <result column="BM_PRICE" property="BM_PRICE"/> 
    <result column="BM_STATUS" property="BM_STATUS"/> 
    <result column="BM_LIKE" property="BM_LIKE"/> 
    <result column="SELLER_NICKNAME" property="SELLER_NICKNAME"/>  
    <result column="BM_HIT" property="BM_HIT"/> 
    <result column="BM_CONTENT" property="BM_CONTENT"/>
 </resultMap>

   <!-- 1  최근상품,인기상품 가져오기 -->
   <select id="proc_board_main" statementType="CALLABLE" parameterType="java.util.Map">
      {CALL proc_board_main(#{pr_choice}
                     , #{p_temp, mode=OUT, jdbcType=CURSOR, resultMap=itemVO})}
   </select>
   
   <!-- 2 사용자가 카테고리메뉴에서 카테고리 선택 시 -->
   <select id="proc_board_main_categori" statementType="CALLABLE" parameterType="java.util.Map">
      {CALL proc_board_main_categori(#{pr_categori}
                     , #{p_temp, mode=OUT, jdbcType=CURSOR, resultMap=itemVO})}
   </select>
   
   <!-- 3 검색어를 입력하여 찾기 -->
   <select id="proc_board_search" statementType="CALLABLE" parameterType="java.util.Map">
      {CALL proc_board_search(#{pr_search_order}
      				 , #{pr_search}
                     , #{p_temp, mode=OUT, jdbcType=CURSOR, resultMap=itemVO})}
   </select>
   
   <!-- 4 사용자가 상품 수정 버튼 클릭 시 상품의 정보를 다 가져와야하니까 있음 - 정보만 -->
   <select id="editItemContext" resultType="map" parameterType="int">
      select BM_NO, BM_TITLE, BM_PRICE, CATEGORY_NAME, BM_CONTENT  
	  from BOARD_MASTER 
      where bm_no=#{pr_bm_no}
   </select>
   
   <!-- 5 사용자가 상품 수정 버튼 클릭 시 상품의 정보를 다 가져와야하니까 있음 - 사진만 -->
   <select id="editItemImg" resultType="String" parameterType="int">
      select BI_FILE  
	  from BOARD_IMG  
	  where bm_no=#{pr_bm_no}
	  order by BI_NO
   </select>
   
   <!-- 6-1 상품 정보 저장 -->
   <select id="proc_board_update" statementType="CALLABLE" parameterType="java.util.Map">
      {CALL "proc_board_update(#{pr_BM_TITLE}
                     , #{pr_BM_CONTENT}, #{pr_BM_PRICE}
                     , #{pr_bm_no}, #{pr_CATEGORY_NAME})}
   </select>
   
   <!-- 6-2 이미지 교체후 저장 -->

   <!-- 7 상품의 내용만 가져옴 - 사용자가 상품하나를 자세히 볼 때 -->
   <select id="proc_board_select" resultType="map" parameterType="java.util.Map">
      select bm.bm_no,BM_TITLE,BM_HIT,BM_DATE,BM_LIKE,BM_CONTENT,BM_PRICE,BM_STATUS,SELLER_NICKNAME,bm_status,
       (select case when EXISTS(select  1 from MY_LIKE  where MEM_EMAIL=#{pr_MEM_EMAIL} and BM_NO=#{pr_bm_no}) then 'true'
                  else 'false' end from dual) i_like
	  from BOARD_MASTER bm
      where bm.bm_no=#{pr_bm_no}
   </select>
   
   <!-- 8 상품 삭제 시 -->
   <select id="proc_board_master_delete" statementType="CALLABLE" parameterType="java.util.Map">
      {CALL proc_board_master_delete(#{br_sel_buy}, #{pr_bm_no})}
   </select>
   
   <!-- 9 상품 판매 완료 처리  -->
   <select id="proc_board_bm_status" statementType="CALLABLE" parameterType="java.util.Map">
      {CALL proc_board_bm_status(#{pr_bm_no}
      				           , #{result, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String})}
   </select>
   
   <!-- 10 상품 찜하기  -->
   <select id="proc_my_like_change" statementType="CALLABLE" parameterType="java.util.Map">
      {CALL proc_my_like_change(#{pr_MEM_EMAIL}
      				 , #{pr_bm_no}
                      , #{i_like, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String})}
   </select>
   
   <!-- 11 댓글 달기. 대댓글 달기  -->
   <select id="proc_comment_insert" statementType="CALLABLE" parameterType="java.util.Map">
      {CALL proc_comment_insert(#{pr_comment_msg}
      				 , #{pr_comment_group, mode=INOUT, jdbcType=INTEGER, javaType=int}
                     , #{pr_comment_pos}, #{pr_mem_nickname} , #{pr_bm_no}
                     , #{p_comment_step, mode=OUT, jdbcType=INTEGER, javaType=int} 
                     , #{result, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String})}
   </select>
   
   <!-- 12 댓글 or 대댓글 삭제  -->
   <select id="proc_comment_delete" statementType="CALLABLE" parameterType="java.util.Map">
      {CALL proc_comment_delete(#{pr_comment_step}
                              , #{result, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String})}
   </select>
   
   <!-- 13 댓글 or 대댓글 수정  -->
   <select id="proc_comment_update" statementType="CALLABLE" parameterType="java.util.Map">
      {CALL proc_comment_update(#{pr_comment_msg}
      				 , #{pr_comment_step}
                     , #{result, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String})}
   </select>
   
   <!-- 14 사용자가 상품을 등록 시에 -->
   <select id="proc_board_insert" statementType="CALLABLE" parameterType="java.util.Map">
      {CALL proc_board_insert(#{pr_choice}
                     , #{p_temp, mode=OUT, jdbcType=CURSOR, resultMap=itemVO})}
   </select>
   
   


</mapper>