<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.mapper.MemberMapper">

<!-- ==================================== [[ ＳＥＬＥＣＴ ]] ==================================== -->
	<select id="selectNickName" parameterType="map" resultType="map">
		SELECT mem_email, mem_img, mem_nickname, mem_pw, mem_gender, mem_age, mem_create_date, issocial, mem_active, mem_star, coin_remain, mem_phone, mem_paypw, mem_errand_mode, mem_star_num
		  FROM member
		 WHERE mem_nickname = #{mem_nickname}
	</select>
	<select id="selectEmail" parameterType="map" resultType="map">
		SELECT mem_email, mem_img, mem_nickname, mem_pw, mem_gender, mem_age, mem_create_date, issocial, mem_active, mem_star, coin_remain, mem_phone, mem_paypw, mem_errand_mode, mem_star_num
		  FROM member
		 WHERE mem_email = #{mem_email}
	</select>
	<select id="selectMember" parameterType="map" resultType="map">
		SELECT mem_email, mem_img, mem_nickname, mem_pw, mem_gender, mem_age, mem_create_date, issocial, mem_active, mem_star, coin_remain, mem_phone, mem_paypw, mem_errand_mode, mem_star_num
		  FROM member
		 WHERE mem_email = #{mem_email}
		   AND mem_pw = #{mem_pw}
	</select>
	<select id="selectMemberAdmin" parameterType="map" resultType="map">
		SELECT mem_email, mem_img, mem_nickname, mem_pw, mem_gender, mem_age, mem_create_date, issocial, mem_active, mem_star, coin_remain, mem_phone, mem_paypw, mem_errand_mode, mem_star_num
		  FROM member
		 WHERE mem_email = #{mem_email}
	</select>
	<select id="selectIsMember" parameterType="map" resultType="int">
		SELECT count(*)
		  FROM member
		 WHERE mem_email = #{mem_email}
		   AND mem_pw = #{mem_pw}
	</select>
	<select id="selectIsMemberPw" parameterType="map" resultType="int">
		SELECT count(*)
		  FROM member
		 WHERE mem_email = #{mem_email}
	</select>
	<select id="selectOneBySession" parameterType="map" resultType="map">
		SELECT *
  		  FROM nds_session
	     WHERE mem_sessionid = #{mem_sessionid}
       	   AND TO_DATE (sid_expired, 'YYYY-MM-DD HH24:MI:SS') - SYSDATE > 0
	</select>
	<select id="myWalletRecord" parameterType="map" resultType="map">
		 SELECT TRANS_DATE, TRANS_CONTENT, TRANS_PRICE, TRANS_REMAIN, DECODE(TRANS_IO,'i','입금','출금') as TRANS_IO
		   FROM coin_trans
		  WHERE mem_email= #{mem_email}
	   ORDER BY trans_date DESC
	</select>
	<!-- 중고거래 내역 조회 -->
	<select id="getMyTrade" parameterType="map" resultType="map">
	select bm_no, bm_title, bm_date, bm_content, bm_price
	from board_master
	<if test='mem_nickName_buyer!=null'>
		WHERE mem_nickName = er.mem_email_nds
		AND mem_email_req = #{mem_email_req}
	</if>
	<if test='mem_email_nds!=null'>
		WHERE mb.mem_email = er.mem_email_req
		AND mem_email_nds = #{mem_email_nds}
	</if>
	</select>
	
<!-- ==================================== [[ ＵＰＤＡＴＥ ]] ==================================== -->
	<select id="updatePw" statementType="CALLABLE" parameterType="map">
		{call PROC_MEM_PW(#{mem_email, mode=IN, jdbcType=VARCHAR},#{mem_pw, mode=IN, jdbcType=VARCHAR},#{change_pw, mode=IN, jdbcType=VARCHAR},#{result, mode=OUT, jdbcType=NUMERIC})}
	</select>
	<select id="updateActive" statementType="CALLABLE" parameterType="map">
		{call PROC_MEM_ACTIVE(#{mem_email, mode=IN, jdbcType=VARCHAR},#{mem_pw, mode=IN, jdbcType=VARCHAR},#{result, mode=OUT, jdbcType=NUMERIC})}
	</select>
	<update id="updateMember" parameterType="map">
		UPDATE member
		<set>
			<if test='mem_nickname!=null'>mem_nickname = #{mem_nickname}</if>
			<if test='change_img!=null'>mem_img = #{change_img}</if>
			<if test='coin_remain!=null'>coin_remain = #{coin_remain}</if>
		</set>
		 WHERE mem_email = #{mem_email}
	</update>
<!-- ==================================== [[ ＩＮＳＥＲＴ ]] ==================================== -->
	<insert id="insertMember">
		INSERT INTO member(mem_email, mem_img, mem_nickname, mem_pw, mem_gender, mem_age, mem_create_date, issocial, mem_active, mem_star, coin_remain, mem_phone, mem_star_num)
		VALUES(#{mem_email}, '1.png', #{mem_nickname}, #{mem_pw}, #{mem_gender}, #{mem_age}, TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'), #{issocial}, 'T', 0, 0, #{mem_phone}, 0)
	</insert>
	<insert id="insertCoinTrans">
		INSERT INTO coin_trans
     	VALUES (SEQ_COIN_TRANS.NEXTVAL, #{mem_email}, TO_CHAR (SYSDATE, 'YYYY-MM-DD HH24:MI:SS'), #{trans_content}, #{trans_price}, #{trans_remain}, #{trans_io})
	</insert>
<!-- ==================================== [[ ＤＥＬＥＴＥ ]] ==================================== -->


<!-- ==================================== [[ Ｅ　Ｌ　Ｓ　Ｅ ]] ==================================== -->
	
	<select id="uiToSession" statementType="CALLABLE" parameterType="map">
		{call PROC_SESSION_MGR(#{mem_email, mode=IN, jdbcType=VARCHAR},#{mem_pw, mode=IN, jdbcType=VARCHAR},#{mem_sessionid, mode=IN, jdbcType=VARCHAR},#{imsi_sessionid, mode=IN, jdbcType=VARCHAR},#{auth_range, mode=IN, jdbcType=CHAR},#{result, mode=OUT, jdbcType=NUMERIC})}
	</select>
</mapper>